#
# File used to perform the diffie hellman 
# handshake between two entities
#
# Also uses the expo.py file to perform the 
# modular exponnenation of large numbers
#

from expo import expo
import socket
import sys

HOST = 'localhost'
PORT = 8000

MESSAGE_SIZE = 1024

def main():
    print('ENTER ALL VALUES AS INTEGERS')
    g = int(input('g: '))
    p = int(input('p: '))

    # ALICIES SECRET!!! #
    sa = 160011

    tb = 0
    ta = expo(g, sa, p)

    print('Alice key:', ta)

    # Client socket code:
    #
    # Syntax taken from: https://realpython.com/python-sockets/

    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
        s.connect((HOST, PORT))
        s.sendall(ta.to_bytes(MESSAGE_SIZE, byteorder=sys.byteorder))
        data = s.recv(MESSAGE_SIZE)
        tb = int.from_bytes(data, byteorder=sys.byteorder)
        print('Recieved tb from Bob:', tb)

    private_key = expo(tb, sa, p)
    print('Private key generated by Alice:', private_key)


if __name__ == "__main__":
    main()